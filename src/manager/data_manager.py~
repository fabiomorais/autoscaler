import threading as t

from meter_util import *
from database_helper import *

class Manager(t.Thread):
    
	def __init__(self, env, delay, iterations):
		t.Thread.__init__(self)
		self.environment	= env
		self.delay 		= delay
		self.iterations 	= iterations


	def run(self):

		ct = 0
		while ct < self.iterations:
			
			ct += 1
			print 'Manager: {0}'.format(ct)

			meter_list		= self.environment.meter_list

			for x in range(0, len(meter_list)):

				meter_type		= meter_list[x]
				current_time 		= time.time()
				monitoring_interval	= get_monitoring_interval(current_time, self.environment.control_periodicity)

				print 
				print
				create_or_update_meter_average_view(self.environment, meter_type, self.environment.project_id, monitoring_interval)
				create_or_update_uptime_vm_view(self.environment, self.environment.project_id, monitoring_interval)
				print
				print

			time.sleep(self.delay)
